const getSmartResponse = require('../utils/getSmartResponse');
const { User } = require('../models/user');

const fallbackWeeklyChecklist = [
Â  "Set clear weekly goals related to your focus",
Â  "Pick one priority per day",
Â  "Leave buffer time to review progress",
Â  "Midweek reflection & reset if needed",
Â  "Schedule focused deep work hours",
Â  "Avoid distractions â€“ set phone boundaries",
Â  "Celebrate wins and evaluate what worked"
];

async function generateWeeklyChecklist(user) {
Â  const now = new Date();
Â  const today = now.toISOString().split('T')[0];

Â  // Restrict access for expired or unsubscribed
Â  if (user.subscriptionStatus === 'expired') {
Â  Â  return fallbackWeeklyChecklist;
Â  }

Â  if (user.subscriptionStatus === 'trial') {
Â  Â  const lastUseDate = user.lastAiUseDate?.toISOString().split('T')[0];
Â  Â  if (lastUseDate !== today) {
Â  Â  Â  user.aiUsageCount = 0;
Â  Â  }

Â  Â  if (user.aiUsageCount >= 5) {
Â  Â  Â  return fallbackWeeklyChecklist;
Â  Â  }

Â  Â  user.aiUsageCount += 1;
Â  Â  user.lastAiUseDate = now;
Â  }

Â  if (user.subscriptionPlan === 'basic') {
Â  Â  const weekStart = new Date();
Â  Â  weekStart.setDate(weekStart.getDate() - weekStart.getDay());
Â  Â  const startOfWeek = weekStart.toISOString().split('T')[0];

Â  Â  const lastUseDate = user.lastAiUseDate?.toISOString().split('T')[0];
Â  Â  if (!user.lastAiUseDate || lastUseDate < startOfWeek) {
Â  Â  Â  user.aiUsageCount = 0;
Â  Â  }

Â  Â  if (user.aiUsageCount >= 10) {
Â  Â  Â  return fallbackWeeklyChecklist;
Â  Â  }

Â  Â  user.aiUsageCount += 1;
Â  Â  user.lastAiUseDate = now;
Â  }

Â  if (!user.isSubscribed && user.subscriptionStatus !== 'trial') {
Â  Â  return fallbackWeeklyChecklist;
Â  }

Â  try {
Â  Â  const prompt = `Create a 7-day weekly plan to help someone stay focused on their goal: "${user.focus}". Keep each day short and focused.`;
Â  Â  const aiChecklist = await getSmartResponse(prompt, 'weekly');

Â  Â  // Save usage info
Â  Â  await user.save();

Â  Â  return aiChecklist || fallbackWeeklyChecklist;
Â  } catch (err) {
Â  Â  console.error('ðŸ§  AI weekly checklist error:', err);
Â  Â  return fallbackWeeklyChecklist;
Â  }
}

module.exports = generateWeeklyChecklist;
