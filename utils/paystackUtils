// File: src/utils/paystackUtils.js - CORRECTED VERSION

const axios = require('axios');
const { getPlanDetails } = require('./subscriptionUtils'); // Import the function

const PAYSTACK_SECRET_KEY = process.env.PAYSTACK_SECRET_KEY;
const CALLBACK_URL = `${process.env.RENDER_EXTERNAL_URL}/paystack/webhook`;

/**
 * Generates a Paystack payment link for a subscription.
 * @param {object} user - The user object from the database.
 * @param {string} plan - The subscription plan ('basic' or 'premium').
 * @returns {string} The authorization URL.
 */
async function generatePaystackLink(user, plan) {
    try {
        const planDetails = getPlanDetails(plan);
        if (!planDetails || !planDetails.paystackPlanCode) {
            console.error(`❌ Paystack plan code not found for plan: ${plan}`);
            throw new Error('Invalid subscription plan.');
        }
        
        const payload = {
            email: user.email || 'user@example.com',
            amount: planDetails.price, // Amount is from the plan details
            plan: planDetails.paystackPlanCode, // ✅ This is the crucial line
            callback_url: CALLBACK_URL,
            metadata: {
                custom_fields: [{
                    telegramId: user.telegramId,
                    plan: plan,
                    userId: user._id
                }]
            }
        };

        const response = await axios.post('https://api.paystack.co/transaction/initialize', payload, {
            headers: {
                Authorization: `Bearer ${PAYSTACK_SECRET_KEY}`,
                'Content-Type': 'application/json',
            },
        });

        return response.data.data.authorization_url;
    } catch (error) {
        console.error('❌ Error generating Paystack link:', error.response ? error.response.data : error.message);
        throw new Error('Failed to generate payment link.');
    }
}

module.exports = {
    generatePaystackLink,
};