// File: src/models/user.js

const mongoose = require('mongoose');

const userSchema = new mongoose.Schema({
Â  telegramId: {
Â  Â  type: String,
Â  Â  required: true,
Â  Â  unique: true
Â  },
Â  name: String,
Â  onboardingStep: {
Â  Â  type: String,
Â  Â  default: null
Â  },
  // ðŸ†• New field for conversational state management
  stage: {
    type: String,
    default: 'onboarded'
  },
Â  // --- ADDED/UPDATED FIELDS ---
Â  goalMemory: {
Â  Â  text: String,
Â  Â  date: Date,
Â  },
Â  checklists: [{
Â  Â  date: {
Â  Â  Â  type: Date,
Â  Â  Â  required: true
Â  Â  },
Â  Â  tasks: [{
Â  Â  Â  text: String,
Â  Â  Â  completed: {
Â  Â  Â  Â  type: Boolean,
Â  Â  Â  Â  default: false
Â  Â  Â  },
Â  Â  Â  carriedOver: {
Â  Â  Â  Â  type: Boolean,
Â  Â  Â  Â  default: false
Â  Â  Â  }
Â  Â  }],
    // ðŸ†• New fields to store check-in status and report
    checkedIn: {
        type: Boolean,
        default: false
    },
    progressReport: String,
Â  }],
Â  // --- NEW MEMORY FIELDS FOR LONG-TERM CONTEXT ---
Â  recentChatMemory: [{
Â  Â  text: String,
Â  Â  timestamp: Date,
Â  }],
Â  importantMemory: [{
Â  Â  text: String,
Â  Â  timestamp: Date,
Â  }],
Â  // --- END OF NEW MEMORY FIELDS ---
Â  
Â  focusGoal: String,
Â  focusDuration: String,
Â  timelineFlag: {
Â  Â  type: String,
Â  Â  default: 'ok'
Â  },
Â  
Â  hasSubmittedTasksToday: {
Â  Â  type: Boolean,
Â  Â  default: false
Â  },
Â  hasCheckedInTonight: {
Â  Â  type: Boolean,
Â  Â  default: false
Â  },
Â  currentStreak: {
Â  Â  type: Number,
Â  Â  default: 0
Â  },
Â  longestStreak: {
Â  Â  type: Number,
Â  Â  default: 0
Â  },
Â  lastCheckInDate: {
Â  Â  type: String,
Â  Â  default: null
Â  },
Â  trialStartDate: {
Â  Â  type: Date,
Â  Â  default: Date.now
Â  },
Â  subscriptionStatus: {
Â  Â  type: String,
Â  Â  default: 'trial'
Â  },
Â  subscriptionPlan: {
Â  Â  type: String,
Â  Â  default: null
Â  },
Â  subscriptionStartDate: Date,
Â  subscriptionEndDate: Date,
Â  paystackCustomerCode: String,
Â  lastPaymentDate: Date,
Â  paymentReference: String,
Â  isSubscriptionExpired: {
Â  Â  type: Boolean,
Â  Â  default: false
Â  },
Â  feedbackFlags: {
Â  Â  day5: {
Â  Â  Â  type: Boolean,
Â  Â  Â  default: false
Â  Â  },
Â  Â  day12: {
Â  Â  Â  type: Boolean,
Â  Â  Â  default: false
Â  Â  },
Â  Â  postSubscription: {
Â  Â  Â  type: Boolean,
Â  Â  Â  default: false
Â  Â  },
Â  Â  quarterly: {
Â  Â  Â  type: Boolean,
Â  Â  Â  default: false
Â  Â  },
Â  },
Â  aiUsage: {
Â  Â  todayCount: {
Â  Â  Â  type: Number,
Â  Â  Â  default: 0
Â  Â  },
Â  Â  weekCount: {
Â  Â  Â  type: Number,
Â  Â  Â  default: 0
Â  Â  },
Â  Â  lastUsedDate: {
Â  Â  Â  type: String,
Â  Â  Â  default: null
Â  Â  },
Â  },
Â  gptVersion: {
Â  Â  type: String,
Â  Â  default: 'gpt-4o'
Â  },
Â  aiAccessStatus: {
Â  Â  type: String,
Â  Â  enum: ['allowed', 'denied', 'limited'],
Â  Â  default: 'allowed',
Â  },
Â  createdAt: {
Â  Â  type: Date,
Â  Â  default: Date.now,
Â  Â  expires: '180d',
Â  },
Â  missedCheckins: {
Â  Â  type: Number,
Â  Â  default: 0
Â  },
});

module.exports = mongoose.model('User', userSchema);